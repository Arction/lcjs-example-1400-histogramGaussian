(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(t,e,a)=>{const r=a(475),{lightningChart:i,AxisTickStrategies:n,BarChartTypes:s,BarChartSorting:o,Themes:l}=r,c=(t,e)=>{const a=Math.min(...t),r=Math.max(...t),i=(r-a)/e,n=[];for(let t=0;t<e;t++){const e=a+t*i,r=a+(t+1)*i;n.push({binStart:Math.round(100*e)/100,binEnd:Math.round(100*r)/100,values:Array()})}n[e-1].binEnd=r,t.forEach((t=>{const r=Math.floor((t-a)/i);r>=0&&r<e&&n[r].values.push(t)}));const s=[];return n.forEach((t=>{s.push({category:`${(t.binStart+(t.binStart===a?0:.01)).toFixed(2)}â€”${t.binEnd<0?`(${t.binEnd.toFixed(2)})`:t.binEnd.toFixed(2)}`,value:t.values.length})})),s},u=(t=>{const e=[];for(let t=0;t<5e4;t++){let t=0,a=0,r=0;for(;0===r||r>=1;)t=2*Math.random()-1,a=2*Math.random()-1,r=t*t+a*a;const i=t*Math.sqrt(-2*Math.log(r)/r);e.push(i)}return e})(),h=c(u,100),d=i().BarChart({type:s.Vertical}).setTitle("Histogram").setSorting(o.Disabled).setValueLabels(void 0).setData(h).setCursorResultTableFormatter(((t,e,a,r)=>t.addRow("Range:","",e).addRow("Amount of values:","",r.chart.valueAxis.formatValue(a)))),m=d.engine.container,g=document.createElement("label");m.append(g),g.innerHTML="Number of bins:",g.style.position="relative";const S=document.createElement("input");m.append(S),d.setTitleMargin({top:25,bottom:-10}),S.type="number",S.min="1",S.max="1000",S.value="100",S.style.position="relative",S.style.height="5%",S.addEventListener("input",(()=>{const t=parseInt(S.value);if(Number.isInteger(t)&&t>0&&t<=1e3){d.setData([]);const e=c(u,t);d.setData(e).setSorting(o.Disabled)}})),d.valueAxis.setTickStrategy(n.Numeric,(t=>t.setMajorTickStyle((t=>t.setGridStrokeStyle(d.getTheme().xAxisNumericTicks.majorTickStyle.gridStrokeStyle))).setMinorTickStyle((t=>t.setGridStrokeStyle(d.getTheme().yAxisNumericTicks.minorTickStyle.gridStrokeStyle)))));const b=d.getBars(),p=b[0].getFillStyle();b.forEach((t=>{t.setFillStyle(p)}))}},t=>{t.O(0,[736],(()=>(138,t(t.s=138)))),t.O()}]);